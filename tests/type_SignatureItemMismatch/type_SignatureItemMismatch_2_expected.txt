  > [4mUnformatted Error Output:[0m
  > File "tests/type_SignatureItemMismatch/type_SignatureItemMismatch_2.ml", line 8, characters 24-62:
  > Error: Signature mismatch:
  >        Modules do not match:
  >          sig val createElement3 : 'a -> unit end
  >        is not included in
  >          Sig
  >        The value `createElement2' is required but not provided
  >        File "tests/type_SignatureItemMismatch/type_SignatureItemMismatch_2.ml", line 5, characters 2-36:
  >          Expected declaration
  >        The value `createElement' is required but not provided
  >        File "tests/type_SignatureItemMismatch/type_SignatureItemMismatch_2.ml", line 4, characters 2-35:
  >          Expected declaration

[1m[31mError:[0m [4m[36mtests/type_SignatureItemMismatch/type_SignatureItemMismatch_2.ml:8:24-10:3[0m [1m[31m[0m
 5 Â¦   val createElement2: string -> unit
 6 Â¦ end
 7 Â¦ 
 8 Â¦ module MyModule : Sig = [4m[1m[31mstruct[0m
 9 Â¦ [4m[1m[31m  let createElement3 s = ()[0m
10 Â¦ [4m[1m[31mend[0m

[1mThis module is missing the value named[0m [1m[31mcreateElement[0m

  [1mcreateElement[0m must be included because the module's signature says it is required here:

  [36mtests/type_SignatureItemMismatch/type_SignatureItemMismatch_2.ml[0m[2m:4[0m

[1mThis module is missing the value named[0m [1m[31mcreateElement2[0m

  [1mcreateElement2[0m must be included because the module's signature says it is required here:

  [36mtests/type_SignatureItemMismatch/type_SignatureItemMismatch_2.ml[0m[2m:5[0m


[1m[35mLearn:[0m "Signatures" are interfaces that modules may implement.
  You can indicate that a Reason file (.re) implements a signature by
  creating an "interface file" (.rei) of the same name.
  Modules nested inside of a Reason file may also opt into being checked
  against any signature using the type constraint syntax `module M : Sig = ...`


